import jwt from 'jsonwebtoken';
import { Request, Response, NextFunction } from 'express';

interface JwtPayload {
  userId: string;
  role: string;
}

// üü¢ Middleware ‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡πÉ‡∏ô cookie
export const verifyToken = (req: Request, res: Response, next: NextFunction) => {
  const token = req.cookies?.token;
  if (!token) {
    res.status(401).json({ message: '‚ùå No token provided' });
    return
  }

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET as string) as JwtPayload;
    req.user = decoded; // üü¢ ‡πÄ‡∏û‡∏¥‡πà‡∏° user ‡πÄ‡∏Ç‡πâ‡∏≤ req (userId + role)
    next();
  } catch (error) {
    res.status(401).json({ message: '‚ùå Invalid token' });
  }
};
