pipeline {
  agent any

  options {
    skipDefaultCheckout()
  }

  parameters {
    booleanParam(
      name: 'USE_NO_CACHE',
      defaultValue: false,
      description: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ --no-cache ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà'
    )
  }

  stages {
    stage('üì• Checkout Source Code') {
      steps {
        dir('/opt/jenkins_workspace/Benjaphan-Deploy') {
          checkout scm
        }
      }
    }

    stage('üîê Load Secrets') {
      steps {
        dir('/opt/jenkins_workspace/Benjaphan-Deploy') {
          withCredentials([
            string(credentialsId: 'MONGODB_URI', variable: 'MONGODB_URI'),
            string(credentialsId: 'PORT', variable: 'PORT'),
            string(credentialsId: 'JWT_SECRET', variable: 'JWT_SECRET'),
            string(credentialsId: 'GOOGLE_CLIENT_ID', variable: 'GOOGLE_CLIENT_ID'),
            string(credentialsId: 'GOOGLE_CLIENT_SECRET', variable: 'GOOGLE_CLIENT_SECRET'),
            string(credentialsId: 'FACEBOOK_CLIENT_ID', variable: 'FACEBOOK_CLIENT_ID'),
            string(credentialsId: 'FACEBOOK_CLIENT_SECRET', variable: 'FACEBOOK_CLIENT_SECRET')
          ]) {
            echo 'üîí Secrets loaded into environment'
          }
        }
      }
    }

    stage('‚ôªÔ∏è Docker Down') {
      steps {
        dir('/opt/jenkins_workspace/Benjaphan-Deploy') {
          sh 'docker-compose down --remove-orphans || true'
        }
      }
    }

    stage('üê≥ Docker Build') {
      steps {
        dir('/opt/jenkins_workspace/Benjaphan-Deploy') {
          script {
            def buildCmd = params.USE_NO_CACHE ? 'docker-compose build --no-cache' : 'docker-compose build'
            withEnv([
              "MONGODB_URI=${env.MONGODB_URI}",
              "PORT=${env.PORT}",
              "JWT_SECRET=${env.JWT_SECRET}",
              "GOOGLE_CLIENT_ID=${env.GOOGLE_CLIENT_ID}",
              "GOOGLE_CLIENT_SECRET=${env.GOOGLE_CLIENT_SECRET}",
              "FACEBOOK_CLIENT_ID=${env.FACEBOOK_CLIENT_ID}",
              "FACEBOOK_CLIENT_SECRET=${env.FACEBOOK_CLIENT_SECRET}",
              "NODE_ENV=production"
            ]) {
              sh buildCmd
            }
          }
        }
      }
    }

    stage('üöÄ Docker Up') {
      steps {
        dir('/opt/jenkins_workspace/Benjaphan-Deploy') {
          withEnv([
            "MONGODB_URI=${env.MONGODB_URI}",
            "PORT=${env.PORT}",
            "JWT_SECRET=${env.JWT_SECRET}",
            "GOOGLE_CLIENT_ID=${env.GOOGLE_CLIENT_ID}",
            "GOOGLE_CLIENT_SECRET=${env.GOOGLE_CLIENT_SECRET}",
            "FACEBOOK_CLIENT_ID=${env.FACEBOOK_CLIENT_ID}",
            "FACEBOOK_CLIENT_SECRET=${env.FACEBOOK_CLIENT_SECRET}",
            "NODE_ENV=production"
          ]) {
            sh 'docker-compose up -d'
          }
        }
      }
    }

    stage('üßπ Docker Cleanup') {
      steps {
        dir('/opt/jenkins_workspace/Benjaphan-Deploy') {
          echo 'üßº Cleaning Docker builder cache...'
          sh 'docker builder prune -af || true'
        }
      }
    }
  }

  post {
    success {
      echo '‚úÖ Deploy ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ üéâ'
    }
    failure {
      echo '‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö log ‡∏Ñ‡∏£‡∏±‡∏ö'
    }
  }
}
