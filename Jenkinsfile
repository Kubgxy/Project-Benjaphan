pipeline {
  agent any

  parameters {
    booleanParam(
      name: 'USE_NO_CACHE',
      defaultValue: false,
      description: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ --no-cache ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (Build ‡∏ä‡πâ‡∏≤‡∏´‡∏ô‡πà‡∏≠‡∏¢‡πÅ‡∏ï‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î)'
    )
  }

  environment {
    PROJECT_DIR = "/root/Project-Benjaphan"
  }

  stages {
    stage('üì• Checkout') {
      steps {
        echo '‚úÖ Jenkins ‡∏à‡∏∞ checkout ‡∏à‡∏≤‡∏Å GitHub ‡πÉ‡∏´‡πâ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥'
      }
    }

    stage('‚ôªÔ∏è Docker Down & Clean') {
      steps {
        dir("${env.PROJECT_DIR}") {
          echo 'üßπ ‡∏´‡∏¢‡∏∏‡∏î container ‡πÄ‡∏Å‡πà‡∏≤ (‡πÅ‡∏•‡∏∞‡∏•‡∏ö orphan)'
          sh 'docker compose down --remove-orphans || true'
        }
      }
    }

    stage('üê≥ Docker Build') {
      steps {
        dir("${env.PROJECT_DIR}") {
          script {
            if (params.USE_NO_CACHE) {
              echo 'üî• Build ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (--no-cache)'
              sh 'docker compose build --no-cache'
            } else {
              echo '‚ö° Build ‡∏õ‡∏Å‡∏ï‡∏¥ (‡πÉ‡∏ä‡πâ cache)'
              sh 'docker compose build'
            }
          }
        }
      }
    }

    stage('üöÄ Deploy Compose') {
      steps {
        dir("${env.PROJECT_DIR}") {
          echo 'üöÄ ‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ docker compose up'
          sh 'docker compose up -d'
        }
      }
    }
  }

  post {
    success {
      echo '‚úÖ Deploy ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ üéâ'
    }
    failure {
      echo '‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö log ‡∏Ñ‡∏£‡∏±‡∏ö'
    }
  }
}
